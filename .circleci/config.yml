# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# orbs:
#   aws-cli: circleci/aws-cli@4.1.2
#   aws-ecr: circleci/aws-ecr@9.0.1


# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   say-hello:
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#     - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#     - checkout
#     - run:
#         name: "Say hello"
#         command: "echo Hello, World!"
#   build-push:
#     environment:
#       AWS_REGION: us-east-1
#       AWS_ACCOUNT_ID: 123456789
#     docker:
#     - image: cimg/aws:2022.06
#     steps:
#     - checkout
#     - aws-cli/setup:
#         role_arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/CircleCI_OIDC"
#     - aws-ecr/ecr_login:
#         account_id: ${AWS_ACCOUNT_ID}
#     - aws-ecr/build_image:
#         push_image: false
#     - aws-ecr/push_image:
#         account_id: ${AWS_ACCOUNT_ID}
#         repo: my-repo
#         tag: ${CIRCLE_SHA1},latest
# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#     - say-hello
#   docker:
#     jobs:
#     - build-push
##########################################################################################################

version: 2.1
orbs:
  # aws-cli: circleci/aws-cli@4.1.2
  terraform: "circleci/terraform@3.2.1"
# jobs:
#   aws-cli-cred-setup:
#     executor: terraform/default
#     description: command defined to setup aws-cli to run terraform
#     steps:
#       - aws-cli/install
#       - aws-cli/setup:
#           profile_name: default
#           aws_access_key_id: aws_access_key_id
#           aws_secret_access_key: aws_secret_access_key
#           region: us-east-1
workflows:
  deploy_infrastructure:
    jobs:
      # - aws-cli-cred-setup
      - terraform/fmt:
          tag: 1.1.9
          checkout: true
          path: terraform/
      - terraform/validate:
          tag: 1.1.9
          checkout: true
          context: terraform
          path: terraform/
          requires:
            - terraform/fmt
      - terraform/plan:
          tag: 1.1.9
          name: terraform plan
          checkout: true
          context: terraform
          path: terraform/
          attach-workspace: true
          persist-workspace: true
          var_file: ["terraform.tfvars"]
          requires:
            - terraform/validate
      - hold:
          type: approval
          requires:
            - terraform plan
      - terraform/apply:
          tag: 1.1.9
          name: terraform apply
          checkout: true
          context: terraform
          path: terraform/
          attach-workspace: true
          persist-workspace: true
          var_file: ["terraform.tfvars"]
          requires:
            - hold

